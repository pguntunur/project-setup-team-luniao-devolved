// import and instantiate express
const express = require("express") // CommonJS import style!
const morgan = require("morgan") // middleware for nice logging of incoming HTTP requests
const axios = require("axios")
const cors = require('cors');
//const bodyParser = require('body-parser')
//const multer = require('multer')
//const path = require('path')
//const uuidv4 = require('uuid')
const app = express() // instantiate an Express object

app.use(morgan("dev"))
app.use(express.urlencoded({ extended: true }))
app.use(express.json())
app.use(cors());

// we will put some server logic here later...


/* Past Trips Page Routes */
// An api endpoint that returns list of past trips
app.get('/api/pasttrips', (req,res) => {

    /*
    Once mongoose is setup, we would retrieve the data of past trips stored by unique user id. However, as we don't
    mongo set up, I just retrieve mock data from mockaroo.
    */
    axios
    .get("https://my.api.mockaroo.com/past-trips.json?key=8f9d78c0")
    .then(pastTrips => {
        
        res.json(pastTrips.data);
        console.log('Retrieved past trips');
        }) // pass data along directly to client
    .catch(err => next(err)) // pass any errors to express
});


// Edit Profile Routes 
//This will send a get request for the EditProfile page and lay the groundwork for updating the user's data
app.post('/api/EditProfile', (req,res, next) => {

    response = {
        /*
        Without a database setup it is hard to actually change the User's data,
        but this will happen here in a fashion similar to this 
        email:req.body.newEmail,
        password:req.body.newPW
        */
    }
    console.log('User profile updated')
    .catch(err => next(err))

});
/*
//Upload picture route
//configure storage
const storage = multer.diskStorage({
    //Give the file somewhere to go ('uploads' directory)
    destination: (req, file, cb) => {
        cb(null, './uploads');
    },

    //Give the new file a name--ID randomly generated by uuidv4()
    filename: (req, file, cb) => {
        const newFilename = '${uuidv4()}${path.extname(file.originalname)}';
        cb(null, newFilename);
    }, 
});

//create multer instance used to upload the file
const upload = multer({storage})

//Process the uploaded file to the server
app.post('/EditProfile', upload.single('selectedFile'), (req, res) =>{
    res.send();
})
*/ 

// export the express app we created to make it available to other modules
module.exports = app